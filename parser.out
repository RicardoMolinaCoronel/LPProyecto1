Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    APOSTROPHE
    ASSERT
    ASYNC
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    CLOSE
    COMMENT
    CONST
    CONTINUE
    DEFAULT
    DEFERRED
    DO
    DOLLAR
    DOUBQUOTMARK
    ENUM
    EXIT
    EXPORT
    EXTENSION
    EXTERNAL
    FACTORY
    FILE
    IMPORT
    IN
    IS
    ITERABLE
    METHOD
    NOTEQUAL
    OPENWRITE
    READLINESYNC
    SET
    TRY
    WRITE

Grammar

Rule 0     S' -> class
Rule 1     class -> class_content_repeat
Rule 2     class -> declarationMain class_content_repeat
Rule 3     class -> class_content_repeat declarationMain
Rule 4     class -> declarationMain
Rule 5     class_content -> map
Rule 6     class_content -> ifElseStatement
Rule 7     class_content -> function_lambda
Rule 8     class_content -> declarationExpression
Rule 9     class_content -> forStatement
Rule 10    class_content -> while
Rule 11    class_content -> stack
Rule 12    class_content -> inferedReturnFunction
Rule 13    class_content -> expression SEMICOLON
Rule 14    class_content -> print
Rule 15    class_content_repeat -> class_content
Rule 16    class_content_repeat -> class_content_repeat class_content
Rule 17    declarationMain -> datatypeOpt MAIN LPAREN RPAREN LCURLYBRACKET class_content_repeat RCURLYBRACKET
Rule 18    datatypeOpt -> datatype
Rule 19    datatypeOpt -> empty
Rule 20    class_content -> semanticbool
Rule 21    class_content -> semanticlist
Rule 22    class_content -> asign
Rule 23    map -> map_identifier IDENTIFIER EQUAL LCURLYBRACKET map_content RCURLYBRACKET SEMICOLON
Rule 24    list -> list_identifier IDENTIFIER EQUAL list_content SEMICOLON
Rule 25    list_identifier -> LIST
Rule 26    list_identifier -> LIST list_type_specified
Rule 27    list_type_specified -> LESSTHAN datatype GREATERTHAN
Rule 28    map_identifier -> MAP
Rule 29    map_identifier -> MAP map_type_specified
Rule 30    map_type_specified -> LESSTHAN datatype COMMA datatype GREATERTHAN
Rule 31    datatype -> INT
Rule 32    datatype -> STRING
Rule 33    datatype -> BOOL
Rule 34    datatype -> DOUBLE
Rule 35    datatype -> DYNAMIC
Rule 36    datatype -> VOID
Rule 37    datatype -> map_identifier
Rule 38    datatype -> VAR
Rule 39    returnType -> INT
Rule 40    returnType -> STRING
Rule 41    returnType -> BOOL
Rule 42    returnType -> DOUBLE
Rule 43    returnType -> DYNAMIC
Rule 44    returnType -> VOID
Rule 45    returnType -> map_identifier
Rule 46    print -> PRINT LPAREN value RPAREN SEMICOLON
Rule 47    empty -> <empty>
Rule 48    map_content -> map_pairs
Rule 49    map_content -> empty
Rule 50    map_pair -> map_key COLON map_value
Rule 51    map_pairs -> map_pair
Rule 52    map_pairs -> map_pair COMMA map_pairs
Rule 53    map_key -> value
Rule 54    map_value -> value
Rule 55    ifElseStatement -> ifStatement
Rule 56    ifElseStatement -> ifStatement elifStatement_repeat
Rule 57    elifStatement_repeat -> elifStatement
Rule 58    elifStatement_repeat -> elifStatement elifStatement_repeat
Rule 59    ifStatement -> IF LPAREN conditions RPAREN LCURLYBRACKET class_content_repeat RCURLYBRACKET
Rule 60    elifStatement -> ELSE ifStatement
Rule 61    elifStatement -> ELSE LCURLYBRACKET class_content_repeat RCURLYBRACKET
Rule 62    forStatement -> FOR LPAREN declarationExpression SEMICOLON condition SEMICOLON expression RPAREN LCURLYBRACKET RCURLYBRACKET
Rule 63    stack -> FINAL IDENTIFIER EQUAL STACK LESSTHAN datatype GREATERTHAN LPAREN opt_value RPAREN SEMICOLON
Rule 64    while -> WHILE LPAREN conditions RPAREN LCURLYBRACKET class_content_repeat RCURLYBRACKET
Rule 65    stack -> FINAL IDENTIFIER EQUAL STACK LESSTHAN datatype GREATERTHAN LPAREN RPAREN SEMICOLON
Rule 66    stack -> FINAL IDENTIFIER EQUAL STACK DOT OF LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 67    inferedReturnFunction -> IDENTIFIER LPAREN function_arguments_repeat RPAREN LCURLYBRACKET RETURN expression SEMICOLON RCURLYBRACKET
Rule 68    value -> INTEGER
Rule 69    value -> FLOAT
Rule 70    value -> STR
Rule 71    value -> BOOLEAN
Rule 72    value -> IDENTIFIER
Rule 73    value -> booleanOp
Rule 74    value -> propertiesAccess
Rule 75    opt_value -> value
Rule 76    opt_value -> empty
Rule 77    deniable_values -> IDENTIFIER
Rule 78    deniable_values -> BOOLEAN
Rule 79    deniable_values -> booleanOp
Rule 80    negation_values -> deniable_values
Rule 81    negation_values -> EXMARK deniable_values
Rule 82    condition_values -> negation_values
Rule 83    condition_values -> INTEGER
Rule 84    condition_values -> FLOAT
Rule 85    condition_values -> STR
Rule 86    condition_values -> NULL
Rule 87    condition_operator -> DOUBLEQUAL
Rule 88    condition_operator -> LESSTHAN
Rule 89    condition_operator -> GREATERTHAN
Rule 90    condition_operator -> LESSTHAN EQUAL
Rule 91    condition_operator -> GREATERTHAN EQUAL
Rule 92    number -> FLOAT
Rule 93    number -> INTEGER
Rule 94    condition -> IDENTIFIER condition_operator condition_values
Rule 95    condition -> EXMARK IDENTIFIER condition_operator condition_values
Rule 96    condition -> BOOLEAN condition_operator BOOLEAN
Rule 97    condition -> number condition_operator number
Rule 98    condition -> STR condition_operator STR
Rule 99    condition -> booleanOp condition_operator booleanOp
Rule 100   conditions -> condition
Rule 101   conditions -> condition condition_connector conditions
Rule 102   condition_connector -> AND
Rule 103   condition_connector -> OR
Rule 104   condition_connector -> AMPERSAND AMPERSAND
Rule 105   condition_connector -> PIPELINE PIPELINE
Rule 106   function_lambda -> datatype IDENTIFIER LPAREN function_arguments_repeat optFunction_argumentsExpression RPAREN EQUAL GREATERTHAN expression SEMICOLON
Rule 107   function_argument -> datatype IDENTIFIER
Rule 108   function_argument -> empty
Rule 109   function_arguments_repeat -> function_argument
Rule 110   function_arguments_repeat -> function_argument COMMA function_arguments_repeat
Rule 111   optFunction_argumentsExpression -> LCURLYBRACKET optFunction_arguments RCURLYBRACKET
Rule 112   optFunction_argumentsExpression -> empty
Rule 113   optFunction_argument -> REQUIRED datatype IDENTIFIER
Rule 114   optFunction_arguments -> optFunction_argument
Rule 115   optFunction_arguments -> optFunction_argument COMMA optFunction_arguments
Rule 116   expression -> value
Rule 117   expression -> value operatorExpression expression
Rule 118   expression -> value operatorExpression operatorExpression
Rule 119   asign -> IDENTIFIER EQUAL expression SEMICOLON
Rule 120   operableTypes -> IDENTIFIER
Rule 121   operableTypes -> number
Rule 122   operatorExpression -> PLUS
Rule 123   operatorExpression -> MINUS
Rule 124   operatorExpression -> TIMES
Rule 125   operatorExpression -> DIVISION
Rule 126   declarationExpression -> datatype repeatDeclaration SEMICOLON
Rule 127   repeatDeclaration -> IDENTIFIER
Rule 128   repeatDeclaration -> IDENTIFIER COMMA repeatDeclaration
Rule 129   declarationExpression -> datatype IDENTIFIER EQUAL expression SEMICOLON
Rule 130   declarationExpression -> datatype IDENTIFIER EQUAL LPAREN datatype RPAREN IDENTIFIER SEMICOLON
Rule 131   semanticbool -> BOOL IDENTIFIER EQUAL booleanOp SEMICOLON
Rule 132   semanticbool -> BOOL IDENTIFIER EQUAL booloperations SEMICOLON
Rule 133   booleanOp -> TRUE
Rule 134   booleanOp -> FALSE
Rule 135   booloperation -> booleanOp condition_connector booleanOp
Rule 136   booloperation -> IDENTIFIER condition_connector booleanOp
Rule 137   booloperation -> IDENTIFIER condition_connector IDENTIFIER
Rule 138   booloperation -> booleanOp condition_connector IDENTIFIER
Rule 139   booloperations -> booloperation
Rule 140   booloperations -> booloperation condition_connector booloperations
Rule 141   semanticlist -> LIST LESSTHAN DYNAMIC GREATERTHAN IDENTIFIER EQUAL LSQUAREBRACKET insidelist RSQUAREBRACKET SEMICOLON
Rule 142   semanticlist -> LIST LESSTHAN INT GREATERTHAN IDENTIFIER EQUAL LSQUAREBRACKET insidelistint RSQUAREBRACKET SEMICOLON
Rule 143   semanticlist -> LIST LESSTHAN STRING GREATERTHAN IDENTIFIER EQUAL LSQUAREBRACKET insideliststr RSQUAREBRACKET SEMICOLON
Rule 144   semanticlist -> LIST LESSTHAN BOOL GREATERTHAN IDENTIFIER EQUAL LSQUAREBRACKET insidelistbool RSQUAREBRACKET SEMICOLON
Rule 145   semanticlist -> LIST LESSTHAN DOUBLE GREATERTHAN IDENTIFIER EQUAL LSQUAREBRACKET insidelistdouble RSQUAREBRACKET SEMICOLON
Rule 146   insidelist -> value
Rule 147   insidelist -> value COMMA insidelist
Rule 148   insidelistint -> INTEGER
Rule 149   insidelistint -> INTEGER COMMA insidelistint
Rule 150   insideliststr -> STR
Rule 151   insideliststr -> STR COMMA insideliststr
Rule 152   insidelistbool -> booleanOp
Rule 153   insidelistbool -> booleanOp COMMA insidelistbool
Rule 154   insidelistdouble -> FLOAT
Rule 155   insidelistdouble -> FLOAT COMMA insidelistdouble
Rule 156   declarationExpression -> STRING IDENTIFIER EQUAL expressionString SEMICOLON
Rule 157   declarationExpression -> STRING IDENTIFIER SEMICOLON
Rule 158   expressionString -> STR
Rule 159   expressionString -> STR operatorExpressionString expressionString
Rule 160   operatorExpressionString -> PLUS
Rule 161   declarationExpression -> INT IDENTIFIER EQUAL expressionInteger SEMICOLON
Rule 162   declarationExpression -> INT IDENTIFIER SEMICOLON
Rule 163   expressionInteger -> number
Rule 164   expressionInteger -> number operatorExpression expressionInteger
Rule 165   expressionInteger -> IDENTIFIER
Rule 166   expressionInteger -> IDENTIFIER operatorExpression expressionInteger
Rule 167   properties -> KEYS
Rule 168   properties -> VALUES
Rule 169   propertiesAccess -> IDENTIFIER DOT properties

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSAND            : 104 104
AND                  : 102
APOSTROPHE           : 
ASSERT               : 
ASYNC                : 
AWAIT                : 
BOOL                 : 33 41 131 132 144
BOOLEAN              : 71 78 96 96
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
CLOSE                : 
COLON                : 50
COMMA                : 30 52 110 115 128 147 149 151 153 155
COMMENT              : 
CONST                : 
CONTINUE             : 
DEFAULT              : 
DEFERRED             : 
DIVISION             : 125
DO                   : 
DOLLAR               : 
DOT                  : 66 169
DOUBLE               : 34 42 145
DOUBLEQUAL           : 87
DOUBQUOTMARK         : 
DYNAMIC              : 35 43 141
ELSE                 : 60 61
ENUM                 : 
EQUAL                : 23 24 63 65 66 90 91 106 119 129 130 131 132 141 142 143 144 145 156 161
EXIT                 : 
EXMARK               : 81 95
EXPORT               : 
EXTENSION            : 
EXTERNAL             : 
FACTORY              : 
FALSE                : 134
FILE                 : 
FINAL                : 63 65 66
FLOAT                : 69 84 92 154 155
FOR                  : 62
GREATERTHAN          : 27 30 63 65 89 91 106 141 142 143 144 145
IDENTIFIER           : 23 24 63 65 66 66 67 72 77 94 95 106 107 113 119 120 127 128 129 130 130 131 132 136 137 137 138 141 142 143 144 145 156 157 161 162 165 166 169
IF                   : 59
IMPORT               : 
IN                   : 
INT                  : 31 39 142 161 162
INTEGER              : 68 83 93 148 149
IS                   : 
ITERABLE             : 
KEYS                 : 167
LCURLYBRACKET        : 17 23 59 61 62 64 67 111
LESSTHAN             : 27 30 63 65 88 90 141 142 143 144 145
LIST                 : 25 26 141 142 143 144 145
LPAREN               : 17 46 59 62 63 64 65 66 67 106 130
LSQUAREBRACKET       : 141 142 143 144 145
MAIN                 : 17
MAP                  : 28 29
METHOD               : 
MINUS                : 123
NOTEQUAL             : 
NULL                 : 86
OF                   : 66
OPENWRITE            : 
OR                   : 103
PIPELINE             : 105 105
PLUS                 : 122 160
PRINT                : 46
RCURLYBRACKET        : 17 23 59 61 62 64 67 111
READLINESYNC         : 
REQUIRED             : 113
RETURN               : 67
RPAREN               : 17 46 59 62 63 64 65 66 67 106 130
RSQUAREBRACKET       : 141 142 143 144 145
SEMICOLON            : 13 23 24 46 62 62 63 65 66 67 106 119 126 129 130 131 132 141 142 143 144 145 156 157 161 162
SET                  : 
STACK                : 63 65 66
STR                  : 70 85 98 98 150 151 158 159
STRING               : 32 40 143 156 157
TIMES                : 124
TRUE                 : 133
TRY                  : 
VALUES               : 168
VAR                  : 38
VOID                 : 36 44
WHILE                : 64
WRITE                : 
error                : 

Nonterminals, with rules where they appear

asign                : 22
booleanOp            : 73 79 99 99 131 135 135 136 138 152 153
booloperation        : 139 140
booloperations       : 132 140
class                : 0
class_content        : 15 16
class_content_repeat : 1 2 3 16 17 59 61 64
condition            : 62 100 101
condition_connector  : 101 135 136 137 138 140
condition_operator   : 94 95 96 97 98 99
condition_values     : 94 95
conditions           : 59 64 101
datatype             : 18 27 30 30 63 65 106 107 113 126 129 130 130
datatypeOpt          : 17
declarationExpression : 8 62
declarationMain      : 2 3 4
deniable_values      : 80 81
elifStatement        : 57 58
elifStatement_repeat : 56 58
empty                : 19 49 76 108 112
expression           : 13 62 67 106 117 119 129
expressionInteger    : 161 164 166
expressionString     : 156 159
forStatement         : 9
function_argument    : 109 110
function_arguments_repeat : 67 106 110
function_lambda      : 7
ifElseStatement      : 6
ifStatement          : 55 56 60
inferedReturnFunction : 12
insidelist           : 141 147
insidelistbool       : 144 153
insidelistdouble     : 145 155
insidelistint        : 142 149
insideliststr        : 143 151
list                 : 
list_content         : 24
list_identifier      : 24
list_type_specified  : 26
map                  : 5
map_content          : 23
map_identifier       : 23 37 45
map_key              : 50
map_pair             : 51 52
map_pairs            : 48 52
map_type_specified   : 29
map_value            : 50
negation_values      : 82
number               : 97 97 121 163 164
operableTypes        : 
operatorExpression   : 117 118 118 164 166
operatorExpressionString : 159
optFunction_argument : 114 115
optFunction_arguments : 111 115
optFunction_argumentsExpression : 106
opt_value            : 63
print                : 14
properties           : 169
propertiesAccess     : 74
repeatDeclaration    : 126 128
returnType           : 
semanticbool         : 20
semanticlist         : 21
stack                : 11
value                : 46 53 54 75 116 117 118 146 147
while                : 10

